{"version":3,"sources":["lib/MtgCard.jsx","lib/MtgDeck.jsx","components/CardLink.jsx","components/DeckCard.jsx","components/DeckList.jsx","deck.jsx"],"names":["MtgCard","input","raw","quantity","name","set","setNumber","lookup","parseImport","matches","match","groups","MtgDeck","Deck","Sideboard","fetched","Companion","Commander","forEach","card","index","String","split","type","line","push","getScryfallData","data","matchParams","found","find","collector_number","toUpperCase","setAttributesCallback","allCards","concat","filter","Boolean","lookupData","map","Set","sort","substring","indexOf","fetch","method","headers","body","JSON","stringify","identifiers","rawResponse","json","scryfallData","foundCards","findCardFromResult","length","deck","deckExport","arena","CardLink","related_uris","manaCost","mana_cost","gatherer","DeckCard","__","wp","i18n","whatTheType","type_line","includes","clusterDeckByType","init","clusteredDeck","reduce","obj","DeckList","clustered","Object","entries","chunk","registerBlockType","blocks","InspectorControls","blockEditor","components","Button","ButtonGroup","PanelBody","TextareaControl","Fragment","element","title","icon","category","supports","html","attributes","default","source","selector","edit","props","parseRaw","event","setAttributes","clearDeck","e","save"],"mappings":"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","file":"deck.js","sourceRoot":"","sourcesContent":["class MtgCard {\n/*\traw;\n\tquantity;\n\tname = '';\n\tset = '';\n\tsetNumber = 0;\n\tlookup = {};\n*/\n\tconstructor( input = '' ) {\n\t\tthis.raw = '';\n\n\t\tthis.quantity = 0;\n\t\tthis.name = '';\n\t\tthis.set = '';\n\t\tthis.setNumber = '';\n\n\t\tthis.lookup = {};\n\n\t\tthis.parseImport( input );\n\t}\n\n\tparseImport( input ) {\n\t\tif ( ! input ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( typeof input === 'object' && input !== null ) {\n\t\t\tif ( input.raw )       this.raw       = input.raw;\n\t\t\tif ( input.quantity )  this.quantity  = input.quantity;\n\t\t\tif ( input.name )      this.name      = input.name;\n\t\t\tif ( input.set )       this.set       = input.set;\n\t\t\tif ( input.setNumber ) this.setNumber = input.setNumber;\n\t\t\tif ( input.lookup )    this.lookup    = input.lookup;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.raw = input;\n\n\t\tconst matches = input.match( /^(?<quantity>\\d+) (?<name>.+) \\((?<set>[\\da-zA-Z]{3})\\) (?<setNumber>\\d+)$/ );\n\n\t\tif ( matches ) {\n\t\t\tthis.quantity  = matches.groups.quantity;\n\t\t\tthis.name      = matches.groups.name;\n\t\t\tthis.set       = matches.groups.set;\n\t\t\tthis.setNumber = matches.groups.setNumber;\n\t\t}\n\t}\n\n\tget arena() {\n\t\treturn this.quantity + ' ' + this.name + ' (' + this.set + ') ' + this.setNumber;\n\t}\n}\n\nexport default MtgCard;\n","\nimport MtgCard from './MtgCard';\n\nclass MtgDeck {\n/*\tCompanion;\n\tCommander;\n\tDeck = [];\n\tSideboard = [];\n\tfetched; // whether the data has already been fetched.\n*/\n\tconstructor( input = false ) {\n\t\tthis.Deck = [];\n\t\tthis.Sideboard = [];\n\n\t\tthis.fetched = false;\n\n\t\tif ( input ) {\n\t\t\tthis.parseImport( input );\n\t\t}\n\t}\n\n\tparseImport( input ) {\n\t\tif ( typeof input === 'object' && input !== null ) {\n\t\t\tif ( input.Companion ) {\n\t\t\t\tthis.Companion = new MtgCard( input.Companion );\n\t\t\t}\n\n\t\t\tif ( input.Commander ) {\n\t\t\t\tthis.Commander = new MtgCard( input.Commander );\n\t\t\t}\n\n\t\t\tif ( input.Deck ) {\n\t\t\t\tthis.Deck = input.Deck;\n\t\t\t\tthis.Deck.forEach( function( card, index ) {\n\t\t\t\t\tthis.Deck[ index ] = new MtgCard( card );\n\t\t\t\t}, this );\n\t\t\t}\n\n\t\t\tif ( input.Sideboard ) {\n\t\t\t\tthis.Sideboard = input.Sideboard;\n\t\t\t\tthis.Sideboard.forEach( function( card, index ) {\n\t\t\t\t\tthis.Sideboard[ index ] = new MtgCard( card );\n\t\t\t\t}, this );\n\t\t\t}\n\n\t\t\tif ( input.fetched ) {\n\t\t\t\tthis.fetched = input.fetched;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tif ( typeof input === 'string' || input instanceof String ) {\n\t\t\tinput = input.split('\\n');\n\t\t}\n\n\t\tlet type = 'Deck';\n\n\t\tinput.forEach( function( line ) {\n\t\t\tif ( line ) {\n\t\t\t\t// If it starts with a digit, it's a card.  Else, it's a type.\n\t\t\t\tif ( line.match( /^\\d/ ) ) {\n\t\t\t\t\t// Decks and Sideboards can be multiple cards, so add it to the array.\n\t\t\t\t\tif ( 'Deck' === type || 'Sideboard' === type ) {\n\t\t\t\t\t\tthis[ type ].push( new MtgCard( line ) );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis[ type ] = new MtgCard( line );\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\ttype = line;\n\t\t\t\t}\n\t\t\t}\n\t\t}, this );\n\n\t\tthis.getScryfallData();\n\t}\n\n\tfindCardFromResult( data, matchParams ) {\n\t\tlet found = data.find( function( card ) {\n\t\t\treturn card.collector_number === matchParams.collector_number && card.set.toUpperCase() === matchParams.set.toUpperCase();\n\t\t} );\n\n\t\treturn found;\n\t}\n\n\tasync getScryfallData( setAttributesCallback = null ) {\n\t\tthis.fetched = 'working';\n\n\t\t// Make one big array of all involved cards.\n\t\tconst allCards = this.Deck.concat( this.Sideboard, this.Commander, this.Companion ).filter(Boolean);\n\n\t\t// Map the data into strings so we can properly sort out unique lookups.\n\t\tlet lookupData = allCards.map( card => card.set + '|' + card.setNumber );\n\n\t\t// Filter out duplicates and sort!\n\t\tlookupData = [ ...new Set( lookupData ) ].sort();\n\n\t\tlookupData = lookupData.map( card => ({\n\t\t\tset: card.substring( 0, card.indexOf( '|' ) ),\n\t\t\tcollector_number: card.substring( 1 + card.indexOf( '|' ) ),\n\t\t}))\n\n\t\t// Remember, Scryfall maxes out at 75 cards searched for!\n\t\tconst rawResponse = await fetch('https://api.scryfall.com/cards/collection', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Accept': 'application/json',\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify( { identifiers: lookupData } ),\n\t\t});\n\t\tconst scryfallData = await rawResponse.json();\n\n\t\tconst foundCards = scryfallData.data;\n\n\t\t// Reuse a var as we fly through?\n\t\tlet cardData;\n\n\t\t// Loop through\\\n\t\tif ( this.Commander ) {\n\t\t\tthis.Commander.lookup = this.findCardFromResult( foundCards, { set: this.Commander.set, collector_number: this.Commander.setNumber } );\n\t\t}\n\n\t\tif ( this.Companion ) {\n\t\t\tthis.Companion.lookup = this.findCardFromResult( foundCards, { set: this.Companion.set, collector_number: this.Companion.setNumber } );\n\t\t}\n\n\t\tif ( this.Deck.length ) {\n\t\t\tthis.Deck = this.Deck.map( function( card ) {\n\t\t\t\tcard.lookup = this.findCardFromResult( foundCards, { set: card.set, collector_number: card.setNumber } );\n\t\t\t\treturn card;\n\t\t\t}, this );\n\t\t}\n\n\t\tif ( this.Sideboard.length ) {\n\t\t\tthis.Sideboard = this.Sideboard.map( function( card ) {\n\t\t\t\tcard.lookup = this.findCardFromResult( foundCards, { set: card.set, collector_number: card.setNumber } );\n\t\t\t\treturn card;\n\t\t\t}, this );\n\t\t}\n\n\t\tif ( setAttributesCallback ) {\n\t\t\tsetAttributesCallback( { deck: this } );\n\t\t}\n\n\t\tthis.fetched = 'done';\n\t}\n\n\tget arena() {\n\t\tlet deckExport = '';\n\n\t\tif ( this.Commander ) {\n\t\t\tdeckExport += 'Commander\\n' + this.Commander.arena + '\\n\\n';\n\t\t}\n\n\t\tif ( this.Companion ) {\n\t\t\tdeckExport += 'Companion\\n' + this.Companion.arena + '\\n\\n';\n\t\t}\n\n\t\tif ( this.Sideboard.length ) {\n\t\t\tdeckExport += 'Deck\\n';\n\t\t\tthis.Deck.forEach( function( card ) {\n\t\t\t\tdeckExport += card.arena + '\\n';\n\t\t\t} )\n\t\t\tdeckExport += '\\n';\n\t\t}\n\n\t\tif ( this.Sideboard.length ) {\n\t\t\tdeckExport += 'Sideboard\\n';\n\t\t\tthis.Sideboard.forEach( function( card ) {\n\t\t\t\tdeckExport += card.arena + '\\n';\n\t\t\t} )\n\t\t\tdeckExport += '\\n';\n\t\t}\n\n\t\treturn deckExport;\n\t}\n}\n\nexport default MtgDeck;\n","\nfunction CardLink( { card } ) {\n\tif ( card.lookup && card.lookup.related_uris ) {\n\t\tlet manaCost = card.lookup.mana_cost;\n\t\t//\t.replace( /\\{1\\}/gi, '①' )\n\t\t//\t.replace( /\\{2\\}/gi, '②' )\n\t\t//\t.replace( /\\{3\\}/gi, '③' )\n\t\t//\t.replace( /\\{4\\}/gi, '④' )\n\t\t//\t.replace( /\\{5\\}/gi, '⑤' )\n\t\t//\t.replace( /\\{6\\}/gi, '⑥' )\n\t\t//\t.replace( /\\{7\\}/gi, '⑦' )\n\t\t//\t.replace( /\\{8\\}/gi, '⑧' )\n\t\t//\t.replace( /\\{9\\}/gi, '⑨' )\n\t\t//\t.replace( /\\{10\\}/gi, '⑩' )\n\t\t//\t.replace( /\\{11\\}/gi, '⑪' )\n\t\t//\t.replace( /\\{12\\}/gi, '⑫' )\n\t\t//\t.replace( /\\{13\\}/gi, '⑬' )\n\t\t//\t.replace( /\\{14\\}/gi, '⑭' )\n\t\t//\t.replace( /\\{15\\}/gi, '⑮' )\n\t\t//\t.replace( /\\{16\\}/gi, '⑯' )\n\t\t//\t.replace( /\\{17\\}/gi, '⑰' )\n\t\t//\t.replace( /\\{18\\}/gi, '⑱' )\n\t\t//\t.replace( /\\{19\\}/gi, '⑲' )\n\t\t//\t.replace( /\\{20\\}/gi, '⑳' )\n\t\t//\t.replace( /\\{X\\}/gi, 'Ⓧ' )\n\t\t//\t.replace( /\\{Y\\}/gi, 'Ⓨ' )\n\t\t//\t.replace( /\\{Z\\}/gi, 'Ⓩ' )\n\t\t//\t.replace( /\\{W\\}/gi, '⚪' )\n\t\t//\t.replace( /\\{U\\}/gi, '🔵' )\n\t\t//\t.replace( /\\{B\\}/gi, '⚫' )\n\t\t//\t.replace( /\\{R\\}/gi, '🔴' )\n\t\t//\t.replace( /\\{G\\}/gi, '🟢' )\n\t\t//\t.replace( /\\{C\\}/gi, '🟠' )\n\t\t//\t.replace( /\\{W/U\\}/gi, '' ) // azorius\n\t\t//\t.replace( /\\{W/B\\}/gi, '' ) // orzhov\n\t\t//\t.replace( /\\{B/R\\}/gi, '' ) // rakdos\n\t\t//\t.replace( /\\{B/G\\}/gi, '' ) // golgari\n\t\t//\t.replace( /\\{U/B\\}/gi, '' ) // dimir\n\t\t//\t.replace( /\\{U/R\\}/gi, '' ) // izzet\n\t\t//\t.replace( /\\{R/G\\}/gi, '' ) // gruul\n\t\t//\t.replace( /\\{R/W\\}/gi, '' ) // boros\n\t\t//\t.replace( /\\{G/W\\}/gi, '' ) // selesnya\n\t\t//\t.replace( /\\{G/U\\}/gi, '' ) // simic\n\t\t//\t.replace( /\\{S\\}/gi, '❄️' );\n\t\treturn ( <a href={ card.lookup.related_uris.gatherer }>{ card.name } <span className=\"mana-cost\">{ manaCost }</span></a> );\n\t}\n\treturn ( <a href=\"#\">{ card.name }</a> );\n}\n\nexport default CardLink;\n","\nimport CardLink from './CardLink';\n\nfunction DeckCard( { card } ) {\n\treturn (\n\t\t<li data-lookup={ JSON.stringify( card.lookup ) }>\n\t\t\t{ card.quantity }x <CardLink card={ card } />\n\t\t</li>\n\t);\n}\n\nexport default DeckCard;\n","\nconst {\n\t__\n} = wp.i18n;\n\nimport CardLink from './CardLink';\nimport DeckCard from './DeckCard';\n\nfunction whatTheType( type_line ) {\n\n\tif ( type_line.includes( 'Creature' ) ) {\n\t\treturn __( 'Creature', 'mtg-blocks' );\n\t}\n\tif ( type_line.includes( 'Planeswalker' ) ) {\n\t\treturn __( 'Planeswalker', 'mtg-blocks' );\n\t}\n\tif ( type_line.includes( 'Land' ) ) {\n\t\treturn __( 'Land', 'mtg-blocks' );\n\t}\n\tif ( type_line.includes( 'Instant' ) ) {\n\t\treturn __( 'Instant', 'mtg-blocks' );\n\t}\n\tif ( type_line.includes( 'Sorcery' ) ) {\n\t\treturn __( 'Sorcery', 'mtg-blocks' );\n\t}\n\tif ( type_line.includes( 'Artifact' ) ) {\n\t\treturn __( 'Artifact', 'mtg-blocks' );\n\t}\n\tif ( type_line.includes( 'Enchantment' ) ) {\n\t\treturn __( 'Enchantment', 'mtg-blocks' );\n\t}\n\n\treturn __( 'Unknown', 'mtg-blocks' );\n}\n\nfunction clusterDeckByType( Deck ) {\n\tconst init = {};\n\tinit[ __( 'Creature', 'mtg-blocks' ) ] = [];\n\tinit[ __( 'Planeswalker', 'mtg-blocks' ) ] = [];\n\tinit[ __( 'Instant', 'mtg-blocks' ) ] = [];\n\tinit[ __( 'Sorcery', 'mtg-blocks' ) ] = [];\n\tinit[ __( 'Artifact', 'mtg-blocks' ) ] = [];\n\tinit[ __( 'Enchantment', 'mtg-blocks' ) ] = [];\n\tinit[ __( 'Land', 'mtg-blocks' ) ] = [];\n\tinit[ __( 'Unknown', 'mtg-blocks' ) ] = [];\n\n\tconst clusteredDeck = Deck.reduce( function ( obj, card ) {\n\t\tconst type = whatTheType( card.lookup.type_line );\n\t\tobj[ type ].push( card );\n\t\treturn obj;\n\t}, init );\n\n\treturn clusteredDeck;\n}\n\nfunction DeckList( { deck } ) {\n\tlet clustered;\n\tif ( 'done' === deck.fetched ) {\n\t\tclustered = clusterDeckByType( deck.Deck );\n\t}\n\treturn (\n\t\t<div className=\"mtg-deck-list\">\n\n\t\t\t{ deck.Commander && (\n\t\t\t\t<div className=\"mtg-deck-list_Commander\">\n\t\t\t\t\t<h3>{ __( 'Commander:', 'mtg-blocks' ) }</h3>\n\t\t\t\t\t<div className=\"commander\" data-lookup={ JSON.stringify( deck.Commander.lookup ) }>\n\t\t\t\t\t\t<CardLink card={ deck.Commander } />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t) }\n\n\t\t\t{ deck.Companion && (\n\t\t\t\t<div className=\"mtg-deck-list_Companion\">\n\t\t\t\t\t<h3>{ __( 'Companion:', 'mtg-blocks' ) }</h3>\n\t\t\t\t\t<div className=\"companion\" data-lookup={ JSON.stringify( deck.Companion.lookup ) }>\n\t\t\t\t\t\t<CardLink card={ deck.Companion } />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t) }\n\n\t\t\t{ !! deck.Deck.length && (\n\t\t\t\t<div className=\"mtg-deck-list_Deck\">\n\t\t\t\t\t<h3>{ __( 'Deck:', 'mtg-blocks' ) }</h3>\n\t\t\t\t\t{ clustered ? Object.entries( clustered ).map( function( chunk ) {\n\t\t\t\t\t\tif ( ! chunk[1].length ) return;\n\t\t\t\t\t\t// This is not ideal, as `chunk[0]` is technically a translated string.\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div className={ 'mtg-deck-list_Deck_' + chunk[0] } key={ chunk[0] }>\n\t\t\t\t\t\t\t\t<h4>{ chunk[0] }</h4>\n\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t{ chunk[1].map( card => ( <DeckCard key={ card.raw } card={ card } /> ) ) }\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)\n\t\t\t\t\t} ) : (\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t{ deck.Deck.map( card => ( <DeckCard key={ card.raw } card={ card } /> ) ) }\n\t\t\t\t\t</ul>\n\t\t\t\t\t) }\n\t\t\t\t</div>\n\t\t\t) }\n\n\t\t\t{ !! deck.Sideboard.length && (\n\t\t\t\t<div className=\"mtg-deck-list_Sideboard\">\n\t\t\t\t\t<h3>{ __( 'Sideboard:', 'mtg-blocks' ) }</h3>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t{ deck.Sideboard.map( card => ( <DeckCard key={ card.raw } card={ card } /> ) ) }\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t) }\n\n\t\t</div>\n\t)\n}\n\n\nexport default DeckList;\n","const {\n\tregisterBlockType\n} = wp.blocks;\n\nconst {\n\tInspectorControls\n} = wp.blockEditor;\n\nconst {\n\tButton,\n\tButtonGroup,\n\tPanelBody,\n\tTextareaControl\n} = wp.components;\n\nconst {\n\tFragment\n} = wp.element;\n\nconst {\n\t__\n} = wp.i18n;\n\nimport MtgDeck from './lib/MtgDeck';\nimport DeckList from './components/DeckList';\n\nimport './deck.scss'\n\nregisterBlockType( 'magic-blocks/deck', {\n\ttitle: __( 'MTG Deck', 'mtg-blocks' ),\n\ticon: 'admin-page',\n\tcategory: 'common',\n\tsupports    : {\n\t\thtml    : false,\n\t},\n\n\tattributes: {\n\t\traw: {\n\t\t\ttype: 'string',\n\t\t\tdefault: '',\n\t\t\tsource: 'text',\n\t\t\tselector: 'pre',\n\t\t},\n\t\tdeck: {\n\t\t\ttype: 'object',\n\t\t\tdefault: null,\n\t\t}\n\t},\n\n\tedit: function( props ) {\n\t\tconst parseRaw = function( event ) {\n\t\t\t\tprops.setAttributes( { deck: new MtgDeck( props.attributes.raw ) } );\n\t\t\t},\n\t\t\tclearDeck = function() {\n\t\t\t\tprops.setAttributes({\n\t\t\t\t\traw : '',\n\t\t\t\t\tdeck : null,\n\t\t\t\t});\n\t\t\t};\n\n\t\t// If the deck is just an object, but not a MtgDeck object, reinitialize it to be one.\n\t\tif ( props.attributes.deck && ! props.attributes.deck.getScryfallData ) {\n\t\t\tprops.setAttributes( { deck: new MtgDeck( props.attributes.deck ) } );\n\t\t}\n\n\t\tif ( props.attributes.deck && props.attributes.deck.getScryfallData ) {\n\t\t\tif ( ! props.attributes.deck.fetched ) {\n\t\t\t\tprops.attributes.deck.getScryfallData( props.setAttributes );\n\t\t\t} else {\n\t\t\t//\tconsole.log( 'Scryfall data already loaded!' );\n\t\t\t}\n\t\t} else {\n\t\t//\tconsole.log( 'props.attributes.deck.getScryfallData not found!' );\n\t\t}\n\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t{ props.attributes.deck ? (\n\t\t\t\t\t<DeckList deck={ props.attributes.deck } />\n\t\t\t\t) : (\n\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t<TextareaControl\n\t\t\t\t\t\t\tlabel={ __( 'Arena Format Deck Import', 'mtg-blocks' ) }\n\t\t\t\t\t\t\tvalue={ props.attributes.raw }\n\t\t\t\t\t\t\tonChange={ raw => props.setAttributes( { raw } ) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button isSecondary onClick={ e => parseRaw( e ) }>\n\t\t\t\t\t\t\t{ __( 'Process Import →', 'mtg-blocks' ) }\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Fragment>\n\t\t\t\t) }\n\t\t\t\t<InspectorControls>\n\t\t\t\t\t<PanelBody title={ __( 'Deck Settings', 'mtg-blocks' ) }>\n\t\t\t\t\t\t<ButtonGroup>\n\t\t\t\t\t\t\t<Button isPrimary={ !! props.attributes.deck } disabled={ ! props.attributes.deck } isLarge={true} onClick={ clearDeck }>\n\t\t\t\t\t\t\t\t{ __( 'Reset Deck', 'mtg-blocks' ) }\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button isSecondary disabled={ ! props.attributes.deck } isLarge={true} onClick={ e => props.attributes.deck.getScryfallData() }>\n\t\t\t\t\t\t\t\t{ __( 'Reload Card Data', 'mtg-blocks' ) }\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t</PanelBody>\n\t\t\t\t</InspectorControls>\n\t\t\t</Fragment>\n\t\t);\n\t},\n\n\tsave: function( props ) {\n\t\treturn (\n\t\t\t<div className=\"mtg-blocks_deck\">\n\t\t\t\t<pre>{ props.attributes.raw }</pre>\n\t\t\t\t{ props.attributes.deck ? ( <DeckList deck={ props.attributes.deck } /> ) : null }\n\t\t\t</div>\n\t\t);\n\t}\n} );\n"]}